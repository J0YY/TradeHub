[{"/Users/joyyang/Downloads/tradehub/src/App.js":"1","/Users/joyyang/Downloads/tradehub/src/StateProvider.js":"2","/Users/joyyang/Downloads/tradehub/src/reducer.js":"3","/Users/joyyang/Downloads/tradehub/src/Header/nav.js":"4","/Users/joyyang/Downloads/tradehub/src/Auth/Login.js":"5","/Users/joyyang/Downloads/tradehub/src/Blog/Article.js":"6","/Users/joyyang/Downloads/tradehub/src/portfolio/Stats.js":"7","/Users/joyyang/Downloads/tradehub/src/Blog/Post.js":"8","/Users/joyyang/Downloads/tradehub/src/Blog/TweetBox.js":"9","/Users/joyyang/Downloads/tradehub/src/Blog/Newsfeed.js":"10","/Users/joyyang/Downloads/tradehub/src/Blog/Community.js":"11","/Users/joyyang/Downloads/tradehub/src/Home/Home.js":"12","/Users/joyyang/Downloads/tradehub/src/Learn/Learn.js":"13","/Users/joyyang/Downloads/tradehub/src/Stock/LineGraph.js":"14","/Users/joyyang/Downloads/tradehub/src/Portfolio/Stats.js":"15","/Users/joyyang/Downloads/tradehub/src/Portfolio/StatsRow.js":"16","/Users/joyyang/Downloads/tradehub/src/api/firebase.js":"17","/Users/joyyang/Downloads/tradehub/src/Stock/StockShowcase.js":"18","/Users/joyyang/Downloads/tradehub/src/api/api.js":"19","/Users/joyyang/Downloads/tradehub/src/Home/Hero/Hero.js":"20","/Users/joyyang/Downloads/tradehub/src/index.js":"21","/Users/joyyang/Downloads/tradehub/src/Stock/TimeLine.js":"22","/Users/joyyang/Downloads/tradehub/src/Home/Hero/StockShowcase.js":"23","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/TradeComponent.js":"24","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/Card.js":"25","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/AssetComponent.js":"26","/Users/joyyang/Downloads/tradehub/src/Home/PublicTrade/TradeIndicator.js":"27","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/TradeSection.js":"28","/Users/joyyang/Downloads/tradehub/src/Learn/Users.js":"29","/Users/joyyang/Downloads/tradehub/src/Home/BlogSection/BlogSection.js":"30","/Users/joyyang/Downloads/tradehub/src/Home/BlogSection/Blog.js":"31","/Users/joyyang/Downloads/tradehub/src/Home/PublicTrade/PublicTradeSection.js":"32","/Users/joyyang/Downloads/tradehub/src/Home/PublicTrade/PublicTrade.js":"33","/Users/joyyang/Downloads/tradehub/src/Home/Hero/LineGraph.js":"34","/Users/joyyang/Downloads/tradehub/src/reportWebVitals.js":"35","/Users/joyyang/Downloads/tradehub/src/Home/Hero/GetStartedButton.js":"36","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/BankComponent.js":"37","/Users/joyyang/Downloads/tradehub/src/Home/End-CTA/calltoaction.js":"38","/Users/joyyang/Downloads/tradehub/src/Home/Divider.js":"39"},{"size":1488,"mtime":1613871446879,"results":"40","hashOfConfig":"41"},{"size":372,"mtime":1613695403501,"results":"42","hashOfConfig":"41"},{"size":609,"mtime":1613875164716,"results":"43","hashOfConfig":"41"},{"size":710,"mtime":1613847969585,"results":"44","hashOfConfig":"41"},{"size":2293,"mtime":1613869844894,"results":"45","hashOfConfig":"41"},{"size":1585,"mtime":1613845965864,"results":"46","hashOfConfig":"41"},{"size":2806,"mtime":1613844029971,"results":"47","hashOfConfig":"41"},{"size":1607,"mtime":1613836547176,"results":"48","hashOfConfig":"41"},{"size":1789,"mtime":1613846027168,"results":"49","hashOfConfig":"41"},{"size":1739,"mtime":1613873101666,"results":"50","hashOfConfig":"41"},{"size":1365,"mtime":1613845377684,"results":"51","hashOfConfig":"41"},{"size":609,"mtime":1613879100222,"results":"52","hashOfConfig":"41"},{"size":2724,"mtime":1613889902233,"results":"53","hashOfConfig":"41"},{"size":1934,"mtime":1613693873772,"results":"54","hashOfConfig":"41"},{"size":2931,"mtime":1613850492277,"results":"55","hashOfConfig":"41"},{"size":3916,"mtime":1613888773544,"results":"56","hashOfConfig":"41"},{"size":581,"mtime":1613848720646,"results":"57","hashOfConfig":"41"},{"size":2312,"mtime":1613873761995,"results":"58","hashOfConfig":"41"},{"size":81,"mtime":1613686065148,"results":"59","hashOfConfig":"41"},{"size":707,"mtime":1613878736149,"results":"60","hashOfConfig":"41"},{"size":689,"mtime":1613695468880,"results":"61","hashOfConfig":"41"},{"size":623,"mtime":1613687117966,"results":"62","hashOfConfig":"41"},{"size":2579,"mtime":1613878736155,"results":"63","hashOfConfig":"41"},{"size":376,"mtime":1613878738207,"results":"64","hashOfConfig":"41"},{"size":411,"mtime":1613880691245,"results":"65","hashOfConfig":"41"},{"size":540,"mtime":1613878738193,"results":"66","hashOfConfig":"41"},{"size":650,"mtime":1613878737265,"results":"67","hashOfConfig":"41"},{"size":2092,"mtime":1613879264812,"results":"68","hashOfConfig":"41"},{"size":3148,"mtime":1613888338701,"results":"69","hashOfConfig":"41"},{"size":517,"mtime":1613881748250,"results":"70","hashOfConfig":"41"},{"size":443,"mtime":1613882062831,"results":"71","hashOfConfig":"41"},{"size":1105,"mtime":1613884339190,"results":"72","hashOfConfig":"41"},{"size":1961,"mtime":1613889180757,"results":"73","hashOfConfig":"41"},{"size":1934,"mtime":1613878736162,"results":"74","hashOfConfig":"41"},{"size":362,"mtime":1606677123000,"results":"75","hashOfConfig":"41"},{"size":199,"mtime":1613878736147,"results":"76","hashOfConfig":"41"},{"size":717,"mtime":1613878738195,"results":"77","hashOfConfig":"41"},{"size":311,"mtime":1613878732242,"results":"78","hashOfConfig":"41"},{"size":174,"mtime":1613878739228,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ciwx9z",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joyyang/Downloads/tradehub/src/App.js",["173"],"/Users/joyyang/Downloads/tradehub/src/StateProvider.js",[],["174","175"],"/Users/joyyang/Downloads/tradehub/src/reducer.js",[],["176","177"],"/Users/joyyang/Downloads/tradehub/src/Header/nav.js",[],"/Users/joyyang/Downloads/tradehub/src/Auth/Login.js",["178","179"],"import React from 'react';\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\"\nimport { auth, provider, firestore } from \"../api/firebase\";\nimport { actionTypes } from \"../reducer\";\nimport { useStateValue } from \"../StateProvider\";\nimport Nav from \"../Header/nav\";\n\nfunction Login() {\n    const [state, dispatch] = useStateValue();\n\n    const signIn = async () => {\n        await auth\n            .signInWithPopup(provider)\n            .then(result => {\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                });\n                if (!result.additionalUserInfo.isNewUser) {\n                    alert(\"Welcome back, \" + result.user.displayName + \"!\");\n                }\n                else {\n                    const uid = result.user.uid;\n                    // alert(uid);\n                    let db = firestore.collection(\"user\").doc(\"temp\").collection(uid).doc(\"freestock\");\n                    db.set({\n                        shares: 1,\n                        ticker: \"TRADEHUB\"\n                    });\n                    firestore.collection(\"accountValue\").doc(result.user.uid).set({ cash: 10000 });\n                    alert(\"Welcome, \" + result.user.displayName + \"! Since you're new, we've provided you with a free $10,000 of buying power to begin your investing journey, as well as a free share of TRADEHUB stock. Enjoy your stay at TradeHub :D\");\n                }\n                console.log(result.user);\n            })\n            .catch(error => alert(error.message));\n    };\n    return (\n        <div className=\"login\">\n            <Nav />\n            <div className=\"welcome-container\">\n                <div className=\"welcome-top-content\">\n                    <h1>Login</h1>\n                    <h3> Don't worry, your data is not going anywhere!</h3>\n                    <h3>As a platform designed to host public investment portfolios, it's essential that everyone signs in. </h3>\n                </div>\n                <div className=\"welcome-content\">\n                    <div className=\"welcome-button-div\" onClick={signIn}>\n                        Let's Go!\n                        </div>\n                </div>\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default Login;","/Users/joyyang/Downloads/tradehub/src/Blog/Article.js",["180","181","182"],"/Users/joyyang/Downloads/tradehub/src/portfolio/Stats.js",[],"/Users/joyyang/Downloads/tradehub/src/Blog/Post.js",["183"],"import React, { forwardRef } from \"react\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nconst Post = forwardRef(\n  ({ displayName, username, verified, text, image, avatar, timestamp }, ref) => {\n    return (\n      <div className=\"post\" ref={ref}>\n        <div className=\"post__avatar\">\n          <Avatar src={avatar} />\n        </div>\n        <div className=\"post__body\">\n          <div className=\"post__header\">\n            <div className=\"post__headerText\">\n              <h3>\n                {displayName}{\" \"}\n                <span className=\"post__headerSpecial\">\n                  {verified && <VerifiedUserIcon className=\"post__badge\" />} @\n                  {username}\n                </span>\n                <span className=\"timestamp\">\n                  <p>{timestamp}</p>\n                </span>\n              </h3>\n            </div>\n            <div className=\"post__headerDescription\">\n              <p>{text}</p>\n            </div>\n          </div>\n          <img src={image} alt=\"\" />\n          <div className=\"post__footer\">\n            <ChatBubbleOutlineIcon fontSize=\"small\" />\n            <FavoriteBorderIcon fontSize=\"small\" />\n            <PublishIcon fontSize=\"small\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Post;",["184","185"],"/Users/joyyang/Downloads/tradehub/src/Blog/TweetBox.js",["186"],"import React, { useState } from \"react\";\nimport \"./TweetBox.css\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport { useStateValue } from \"../StateProvider\";\nimport { db } from \"../api/firebase\";\nimport firebase from \"firebase\";\n\nfunction TweetBox() {\n\n  const [{ user }] = useStateValue();\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  const [tweetImage, setTweetImage] = useState(\"\");\n\n  const sendTweet = (e) => {\n    e.preventDefault();\n\n    if (tweetMessage.trim() != \"\") {\n      db.collection(\"posts\").add({\n        displayName: user.displayName,\n        username: user.displayName,\n        verified: false,\n        text: tweetMessage,\n        image: tweetImage,\n        avatar: user.photoURL,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n\n      setTweetMessage(\"\");\n      setTweetImage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"tweetBox\">\n      <form>\n        <div className=\"tweetBox__input\">\n          <Avatar src={user.photoURL} />\n          <input\n            onChange={(e) => setTweetMessage(e.target.value)}\n            value={tweetMessage}\n            placeholder={`What have you learned, ${user.displayName.split(\" \")[0]}? Any specific investment strategy you want to share with the community?`}\n            type=\"text\"\n          />\n        </div>\n        <input\n          value={tweetImage}\n          onChange={(e) => setTweetImage(e.target.value)}\n          className=\"tweetBox__imageInput\"\n          placeholder=\"Optional image URL for accompanying image or gif\"\n          type=\"text\"\n        />\n\n        <Button\n          onClick={sendTweet}\n          type=\"submit\"\n          className=\"tweetBox__tweetButton\"\n        >\n          Post\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default TweetBox;",["187","188"],"/Users/joyyang/Downloads/tradehub/src/Blog/Newsfeed.js",["189"],"import React, { useState, useEffect } from \"react\";\nimport \"../Blog/Newsfeed.css\";\nimport LineGraph from \"../Stock/LineGraph\";\nimport TimeLine from '../Stock/TimeLine'\nimport { db } from \"../api/firebase\";\nimport { useStateValue } from \"../StateProvider\";\n\nfunction Newsfeed() {\n\n  const [seed, setSeed] = useState(\"\");\n  const [{ user }] = useStateValue();\n  const [buyingPwr, setBuyingPwr] = useState(\"\");\n\n\n  db.collection(\"accountValue\").doc(user.uid).get()\n    .then((snapshot) => {\n      setBuyingPwr(snapshot.data().cash);\n    })\n    .catch((error) => {\n      alert(error);\n    })\n\n\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  return (\n    <div className=\"newsfeed\">\n      <div className=\"newsfeed__container\">\n        <div className=\"newsfeed__chart__section\">\n          <div className=\"newsfeed_price_asset\">\n            <h1> ${(Math.floor(Math.random() * 150000)).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</h1>\n            <p> $178.22 (+0.12) Today </p>\n          </div>\n          <div className=\"newsfeed__chart\">\n            <LineGraph />\n            <TimeLine />\n          </div>\n        </div>\n        <div className=\"newsfeed__buying__section\">\n          <h2> Buying Power</h2>\n          <h2>${buyingPwr.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</h2>\n        </div>\n        <div className=\"newsfeed__market__section\">\n          <div className=\"newsfeed__market__box\">\n            <p> Markets Closed</p>\n            <h1> NOTE: Please don't buy too many stocks at a time! The Finnhub API's free plan only allows a few requests at a time, otherwise the app will crash :(</h1>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Newsfeed;\n","/Users/joyyang/Downloads/tradehub/src/Blog/Community.js",["190"],"import React, { useState, useEffect } from \"react\";\nimport TweetBox from \"./TweetBox\";\nimport Post from \"./Post\";\nimport \"./Community.css\";\nimport { db } from \"../api/firebase\";\nimport FlipMove from \"react-flip-move\";\nimport firebase from \"firebase\";\nimport Nav from \"../Header/nav\";\nimport Login from \"../Auth/Login\";\nimport { useStateValue } from \"../StateProvider\";\n\nfunction Community() {\n  const [posts, setPosts] = useState([]);\n  const [{ user }] = useStateValue();\n\n\n  useEffect(() => {\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) =>\n      setPosts(snapshot.docs.map((doc) => doc.data()))\n    );\n  }, []);\n\n\n\n  return (\n    <div className=\"community\">\n      <Nav />\n      {!user ? (\n        <Login />\n      ) : (\n          <>\n            <TweetBox />\n\n            <FlipMove>\n              {posts.map((post) => (\n                <Post\n                  key={post.text}\n                  displayName={post.displayName}\n                  username={post.username}\n                  verified={post.verified}\n                  text={post.text}\n                  avatar={post.avatar}\n                  image={post.image}\n                  timestamp={new Date(post.timestamp?.toDate()).toUTCString()}\n                />\n              ))}\n            </FlipMove>\n          </>\n        )}\n    </div>\n  );\n}\n\nexport default Community;","/Users/joyyang/Downloads/tradehub/src/Home/Home.js",[],"/Users/joyyang/Downloads/tradehub/src/Learn/Learn.js",["191","192","193","194","195","196"],"/Users/joyyang/Downloads/tradehub/src/Stock/LineGraph.js",[],"/Users/joyyang/Downloads/tradehub/src/Portfolio/Stats.js",["197"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StatsRow from \"../Portfolio/StatsRow.js\";\nimport { db } from \"../api/firebase\";\nimport \"../Portfolio/Stats.css\";\nimport { useStateValue } from \"../StateProvider\";\n\n\nconst BASE_URL = \"https://finnhub.io/api/v1/quote/\";\nconst TOKEN = \"c0nek4n48v6temfsnpfg\";\n\nfunction Stats() {\n  const [stockData, setStockData] = useState([]);\n  const [mystockData, setmyStocks] = useState([]);\n  const [{ user }] = useStateValue();\n\n  const getMyStocks = () => {\n    db.collection(\"user\").doc(\"temp\").collection(user.uid).onSnapshot((snapshot) => {\n      let promises = [];\n      let tempData = [];\n      snapshot.docs.map((doc) => {\n        promises.push(\n          getStocksData(doc.data().ticker).then((res) => {\n            tempData.push({\n              id: doc.id,\n              data: doc.data(),\n              info: res.data,\n            });\n          })\n        );\n        return tempData;\n      });\n      Promise.all(promises).then(() => {\n        setmyStocks(tempData);\n      });\n    });\n  };\n\n  useEffect(getMyStocks, []);\n\n  const getStocksData = (stock) => {\n    return axios\n      .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\n      .catch((error) => {\n        console.error(\"Error\", error.message);\n      });\n  };\n\n  useEffect(() => {\n    let tempStocksData = [];\n    const stocksList = [\n      \"AAPL\",\n      \"MSFT\",\n      \"TSLA\",\n      \"FB\",\n      \"DASH\",\n      \"GOOGL\",\n      \"ABNB\",\n      \"AMZN\",\n    ];\n    let promises = [];\n    stocksList.map((stock) => {\n      promises.push(\n        getStocksData(stock).then((res) => {\n          tempStocksData.push({\n            name: stock,\n            ...res.data,\n          });\n        })\n      );\n      return tempStocksData;\n    });\n\n    Promise.all(promises).then(() => {\n      setStockData(tempStocksData);\n    });\n  }, []);\n\n  return (\n    <div className=\"stats\">\n      <div className=\"stats__container\">\n        <div className=\"stats__header\">\n          <p>My Stocks</p>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {mystockData.map((stock) => (\n              <StatsRow\n                key={stock.data.ticker}\n                name={stock.data.ticker}\n                openPrice={stock.info.o}\n                shares={stock.data.shares}\n                price={stock.info.c}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"stats__header stats__lists\">\n          <p>Popular</p>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {stockData.map((stock) => (\n              <StatsRow\n                key={stock.name}\n                name={stock.name}\n                openPrice={stock.o}\n                price={stock.c}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;",["198","199"],"/Users/joyyang/Downloads/tradehub/src/Portfolio/StatsRow.js",["200","201"],"/Users/joyyang/Downloads/tradehub/src/api/firebase.js",[],"/Users/joyyang/Downloads/tradehub/src/Stock/StockShowcase.js",["202","203","204"],"/Users/joyyang/Downloads/tradehub/src/api/api.js",["205"],"/Users/joyyang/Downloads/tradehub/src/Home/Hero/Hero.js",[],"/Users/joyyang/Downloads/tradehub/src/index.js",[],"/Users/joyyang/Downloads/tradehub/src/Stock/TimeLine.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/Hero/StockShowcase.js",["206","207","208","209","210"],"import LineGraph from \"./LineGraph.js\";\nimport { ReactComponent as AppleIcon } from \"./stock_icons/logos_apple.svg\"\nimport { ReactComponent as ShopifyIcon } from \"./stock_icons/logos_shopify.svg\"\nimport { ReactComponent as BTCIcon } from \"./stock_icons/logos_btc.svg\"\nimport { ReactComponent as UpIcon } from \"./up-arrow.svg\"\nimport \"./StockShowcase.scss\"\nimport Divider from \"../Divider.js\";\n\n\nconst Icons = [{\n    icon: <AppleIcon />,\n    name: \"Apple\",\n    ticker: \"APPL\"\n},\n{\n    icon: <ShopifyIcon />,\n    name: \"Shopify\",\n    ticker: \"SHOP\"\n},\n{\n    icon: <BTCIcon />,\n    name: \"Bitcoin\",\n    ticker: \"BTC\"\n}]\n\nfunction StockIcon({ icon, name, ticker }) {\n    return (\n        <div className=\"showcase-stockinfo\">\n            <div className=\"stock-icon\">\n                {icon}\n            </div>\n            <div className=\"stock-info\">\n                <p className=\"name\">{name}</p>\n                <p className=\"ticker\">{ticker}</p>\n            </div>\n        </div>\n    )\n}\n\nfunction PriceInfo({ ticker }) {\n    let price = 15000; // get price using ticker\n    let changeType = \"up\";\n    let change = 5.0\n    let changePercent = 3.1\n\n    let [priceInt, priceFloat] = price.toString().split(\".\")\n    priceInt = priceInt.split(\"\").reverse().join(\"\")\n    priceInt = priceInt.replace(/(\\d{3})/g, \"$1,\")\n    priceInt = priceInt.split(\"\").reverse().join(\"\")\n    let priceStr = '$' + priceInt + (priceFloat != undefined ? (\".\" + priceFloat) : \"\")\n    return (\n        <div className=\"showcase-price-info\">\n            <div className=\"price-info\">\n                <p>{`${priceStr}`}</p>\n                <UpIcon style={{transform: \"scale(1.2)\"}} />\n            </div>\n            <div className=\"price-change-info\">\n                <p style={{color: changeType == \"up\" ? \"#1A498F\" : \"#B1583C\"}}>{`${changeType == \"up\" ? \"+\" : \"-\"}${change}`}</p>\n                <Divider height={\"1.8em\"} />\n                <p style={{color: changeType == \"up\" ? \"#1A498F\" : \"#B1583C\"}}>{changePercent + \"%\"}</p>\n            </div>\n        </div>\n    )\n}\nfunction StockShowcaseElement({ icon, name, ticker }) {\n    return (\n        <div className=\"stock-showcase-element\">\n            <StockIcon icon={icon} name={name} ticker={ticker} />\n            <div />\n            {/* <LineGraph /> */}\n            <PriceInfo ticker={ticker} />\n        </div>\n    )\n}\n\nfunction StockShowcase() {\n    return (\n        <div className=\"stock-showcase\">\n            {Icons.map(v => <StockShowcaseElement icon={v.icon} name={v.name} ticker={v.ticker} />)}\n        </div>\n    )\n}\n\nexport default StockShowcase;","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/TradeComponent.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/Card.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/AssetComponent.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/PublicTrade/TradeIndicator.js",["211","212"],"import \"./TradeIndicator.scss\"\n\nfunction TradeIndicator({ style, type, size = 1 }) {\n    return (\n        <div style={{\n            borderRadius: `${0.8125 * (size > 1 ? (size / 2) : size)}rem`,\n            width: `${3.375 * (size > 1 ? (size / 1.2) : size)}rem`,\n            height: `${1.625 * (size > 1 ? (size / 1.2) : size) }rem`,\n            fontSize: `${0.9 * (size > 1 ? (size / 1.5) : size) }em`,\n            ...style\n                }}\n            className = { \"trade-indicator \" + (type == \"sell\" ? \"trade-sell\" : \"trade-buy\") } >\n                    {type == \"sell\" ? \"SELL\" : \"BUY\"}\n        </div>\n    )\n}\n\nexport default TradeIndicator;","/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/TradeSection.js",[],"/Users/joyyang/Downloads/tradehub/src/Learn/Users.js",["213","214"],"import \"./Users.scss\"\nimport Divider from \"../Home/Divider\"\nimport TradeIndicator from \"../Home/PublicTrade/TradeIndicator\";\nimport { Avatar } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport LineGraph from \"../Stock/LineGraph\";\nimport TimeLine from \"../Stock/TimeLine\"\n\nfunction Users({ avatar, displayName, accountValue, ticker, shares, type }) {\n\n    function NavItem(props) {\n        const [open, setOpen] = useState(false);\n        return (\n            <li className=\"nav-item\">\n                <div className=\"icon-button\" onClick={() => setOpen(!open)}>{props.icon}</div>\n                { open && props.children}\n            </li >\n        )\n    }\n\n    function DropdownMenu() {\n        function DropdownItem(props) {\n            return (\n                <div className=\"menu-item\">\n                    {props.children}\n                </div>\n            )\n        }\n        return (\n            <div className=\"dropdown\">\n                <Avatar src={avatar} />\n                <h1>{displayName}</h1>\n                <h2>Account value: {accountValue.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</h2>\n                <h2>Most recent trade: {ticker}, {shares.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}, {type}</h2>\n                <div className=\"newsfeed__chart\">\n                    <LineGraph />\n                    <TimeLine />\n                </div>\n            </div>\n        )\n    }\n\n\n\n    ticker = ticker.toUpperCase();\n    type = type.toLowerCase();\n    let [sharesInt, sharesFloat] = shares.toString().split(\".\")\n    //when adding commas, we start from the end -> reverse string\n    //reverse string to get original\n    sharesInt = sharesInt.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    shares = sharesInt + \" Shares\";\n    accountValue = \"$\" + accountValue.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    return (\n        <div className=\"public-trade-card\">\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <NavItem icon={<Avatar style={{ width: \"3.5em\", height: \"3.5em\", borderRadius: \"50%\" }} src={avatar} />}><DropdownMenu></DropdownMenu></NavItem>\n\n                {/* <div style={{ width: \"3.5em\", height: \"3.5em\", borderRadius: \"50%\", backgroundColor: \"cornflowerblue\" }} /> */}\n                <div style={{ paddingLeft: \"0.8em\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", alignItems: \"flex-start\", opacity: 0.7 }}>\n                    <p style={{ fontSize: \"1.2em\", paddingBottom: \"0.4em\" }}>{displayName}</p>\n                    <p style={{ fontSize: \"1.2em\", }}>{accountValue}</p>\n                </div>\n\n            </div>\n            <div className=\"trade-info\">\n                <div style={{ marginRight: \"1.2em\" }} className=\"share-info\">\n                    <p className=\"asset-title\">{ticker}</p>\n                    <p className=\"num-shares\">{shares}</p>\n                </div>\n                <Divider />\n                <TradeIndicator style={{ marginLeft: \"1.2em\" }} type={type} />\n            </div>\n        </div>\n    )\n}\n\nexport default Users","/Users/joyyang/Downloads/tradehub/src/Home/BlogSection/BlogSection.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/BlogSection/Blog.js",["215","216"],"import \"./Blog.scss\"\nimport printingImg from \"./3dprinting.jpg\"\n\nfunction Blog() {\n    return (\n        <div className=\"blog\">\n            <img src=\"https://images.unsplash.com/photo-1563520239648-a24e51d4b570?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" />\n            <p className=\"title\">Why I bought this small cap 3D printing company</p>\n        </div>\n    )\n}\n\nexport default Blog;","/Users/joyyang/Downloads/tradehub/src/Home/PublicTrade/PublicTradeSection.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/PublicTrade/PublicTrade.js",["217","218"],"/Users/joyyang/Downloads/tradehub/src/Home/Hero/LineGraph.js",[],"/Users/joyyang/Downloads/tradehub/src/reportWebVitals.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/Hero/GetStartedButton.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/Trade-Section/BankComponent.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/End-CTA/calltoaction.js",[],"/Users/joyyang/Downloads/tradehub/src/Home/Divider.js",[],{"ruleId":"219","severity":1,"message":"220","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":16},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"223","replacedBy":"227"},{"ruleId":"225","replacedBy":"228"},{"ruleId":"219","severity":1,"message":"229","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":16},{"ruleId":"219","severity":1,"message":"230","line":10,"column":12,"nodeType":"221","messageId":"222","endLine":10,"endColumn":17},{"ruleId":"219","severity":1,"message":"231","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":25,"column":8,"nodeType":"234","endLine":25,"endColumn":10,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":43,"column":21,"nodeType":"238","endLine":43,"endColumn":72},{"ruleId":"219","severity":1,"message":"239","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":18},{"ruleId":"223","replacedBy":"240"},{"ruleId":"225","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":17,"column":29,"nodeType":"244","messageId":"245","endLine":17,"endColumn":31},{"ruleId":"223","replacedBy":"246"},{"ruleId":"225","replacedBy":"247"},{"ruleId":"219","severity":1,"message":"248","line":10,"column":10,"nodeType":"221","messageId":"222","endLine":10,"endColumn":14},{"ruleId":"219","severity":1,"message":"249","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":16},{"ruleId":"219","severity":1,"message":"250","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":18},{"ruleId":"219","severity":1,"message":"251","line":12,"column":11,"nodeType":"221","messageId":"222","endLine":12,"endColumn":17},{"ruleId":"219","severity":1,"message":"252","line":12,"column":19,"nodeType":"221","messageId":"222","endLine":12,"endColumn":23},{"ruleId":"242","severity":1,"message":"253","line":25,"column":39,"nodeType":"244","messageId":"245","endLine":25,"endColumn":41},{"ruleId":"219","severity":1,"message":"254","line":36,"column":12,"nodeType":"221","messageId":"222","endLine":36,"endColumn":23},{"ruleId":"219","severity":1,"message":"255","line":36,"column":25,"nodeType":"221","messageId":"222","endLine":36,"endColumn":39},{"ruleId":"232","severity":1,"message":"256","line":39,"column":26,"nodeType":"234","endLine":39,"endColumn":28,"suggestions":"257"},{"ruleId":"223","replacedBy":"258"},{"ruleId":"225","replacedBy":"259"},{"ruleId":"219","severity":1,"message":"260","line":2,"column":17,"nodeType":"221","messageId":"222","endLine":2,"endColumn":25},{"ruleId":"219","severity":1,"message":"261","line":2,"column":27,"nodeType":"221","messageId":"222","endLine":2,"endColumn":36},{"ruleId":"219","severity":1,"message":"262","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":46,"column":82,"nodeType":"244","messageId":"245","endLine":46,"endColumn":84},{"ruleId":"242","severity":1,"message":"253","line":55,"column":35,"nodeType":"244","messageId":"245","endLine":55,"endColumn":37},{"ruleId":"219","severity":1,"message":"263","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"219","severity":1,"message":"262","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":50,"column":49,"nodeType":"244","messageId":"245","endLine":50,"endColumn":51},{"ruleId":"242","severity":1,"message":"253","line":58,"column":46,"nodeType":"244","messageId":"245","endLine":58,"endColumn":48},{"ruleId":"242","severity":1,"message":"253","line":58,"column":95,"nodeType":"244","messageId":"245","endLine":58,"endColumn":97},{"ruleId":"242","severity":1,"message":"253","line":60,"column":46,"nodeType":"244","messageId":"245","endLine":60,"endColumn":48},{"ruleId":"242","severity":1,"message":"253","line":12,"column":54,"nodeType":"244","messageId":"245","endLine":12,"endColumn":56},{"ruleId":"242","severity":1,"message":"253","line":13,"column":27,"nodeType":"244","messageId":"245","endLine":13,"endColumn":29},{"ruleId":"219","severity":1,"message":"264","line":22,"column":18,"nodeType":"221","messageId":"222","endLine":22,"endColumn":30},{"ruleId":"219","severity":1,"message":"265","line":47,"column":21,"nodeType":"221","messageId":"222","endLine":47,"endColumn":32},{"ruleId":"219","severity":1,"message":"266","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":7,"column":13,"nodeType":"238","endLine":7,"endColumn":187},{"ruleId":"219","severity":1,"message":"267","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":28,"column":40,"nodeType":"244","messageId":"245","endLine":28,"endColumn":42},"no-unused-vars","'FlipMove' is defined but never used.","Identifier","unusedVar","no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],"'Button' is defined but never used.","'state' is assigned a value but never used.","'key' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["270"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RepeatIcon' is defined but never used.",["268"],["269"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["268"],["269"],"'seed' is assigned a value but never used.","'firebase' is defined but never used.","'SearchIcon' is defined but never used.","'Symbol' is assigned a value but never used.","'Name' is assigned a value but never used.","Expected '===' and instead saw '=='.","'searchStock' is assigned a value but never used.","'setSearchStock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["271"],["268"],["269"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'LineGraph' is defined but never used.","'axios' is defined but never used.","'DropdownItem' is defined but never used.","'sharesFloat' is assigned a value but never used.","'printingImg' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [props]",{"range":"276","text":"277"},"Update the dependencies array to be: [user.uid]",{"range":"278","text":"279"},[796,798],"[props]",[1097,1099],"[user.uid]"]